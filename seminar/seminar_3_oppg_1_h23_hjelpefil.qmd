---
title: "SOK-1004 H23 Seminar 3"
format:
  pdf:
    keep_tex: true
editor: visual

language: norsk.yml
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE)

```

## Oppgave 1

La oss prøve å løse ved hjelp av R.

```{r}
rm(list=ls()) 
suppressPackageStartupMessages(library(tidyverse))
```

### a)

Her er en akse som kan brukes som utgangspunkt for en tegning

```{r}


#lag aksen for tegningen

axes_1 <- ggplot()+
  labs(x="L", y="K")+
  theme(axis.title = element_text(size = 15),
        plot.title = element_text(size = 15),
        panel.background = element_blank(), # hvit bakgrunn
        axis.line = element_line(colour = "black"), # sett inn akselinjer
        axis.title.x = element_text(hjust = 1),
        axis.title.y = element_text(angle = 0, vjust = 1, hjust=1)) + # juster labels på aksene  
  coord_fixed(ratio = 1)+ # lik skala for x og y aksen
  scale_x_continuous(limits = c(0, 6.5), expand = c(0, 0))+
  scale_y_continuous(limits = c(0, 6), expand = c(0, 0)) # begrense aksene
# og sikre at akselinjene møttes i (0,0).

axes_1



```

Du kan legge på punkter og linjer på en enkel måte:

```{r}
figur_1 <- axes_1 + 
  labs(title="Din tittel her") +
  
  geom_segment(aes(x=0, y=1, xend=6, yend=3)) + # tegne en linje
  geom_segment(aes(x=1, y=3, xend=1, yend=1.6),
               arrow = arrow(length = unit(0.25, "cm"))) + # legg på en pil
  annotate("text",x=1,y=3.25, label="A") + # gi linjen en benevnelse
  
  geom_point(aes(x=4, y=5)) +
  annotate("text",x=4,y=5.25, label="B") +
  geom_segment(aes(x=4, y=0, xend=4, yend=5), linetype="dashed") +
  geom_segment(aes(x=0, y=5, xend=4, yend=5), linetype="dashed")
  
  
  
figur_1
  
  
  
```

### b)

Dersom $X\geq 5$

### c)

Ditt svar her. Her kan det være en idé å legge inn noe matematikk. Dette ser pent ut dersom du bruker LaTeX. Her finner du en [cheat sheet](https://github.com/uit-sok-1004-h23/uit-sok-1004-h23.github.io/blob/main/seminar/latexsheet.pdf). Her er et eksempel (insert -\> LaTeX Math -\> display math):

\
$$
\begin{aligned}
\alpha Y + \beta T = Z  
&\Rightarrow \alpha Y = Z -\beta T\\
&\Rightarrow \frac{\alpha Y}{\alpha} = \frac{Z}{\alpha}-\frac{\beta T}{\alpha} \\
&\Rightarrow Y = \frac{Z}{\alpha}-\frac{\beta T}{\alpha} 
\end{aligned}
$$ {#eq-eksempel}

Så kan du referere til @eq-eksempel i teksten.

### d)

Ditt svar her. Her kan det være nyttig å tegne en linje som en funksjon. Her er et eksempel:

```{r}
fun_1 <- function(L) 6 -1.5*L


figur_2 <- figur_1 + 
  stat_function(
        fun=fun_1,
        mapping = aes(color = "BNP")
        ) +
  
  scale_color_manual(values = c("BNP" = "blue")) +
  guides(color = guide_legend(title = "Din tittel her (legend)"))  # legend

figur_2
```

\

### e)

Ditt svar her

### f)

Ditt svar her

### g)

Ditt svar her

### i)

Ditt svar her.

Her er en akse som kan brukes. Legg merke til `y=expression(frac(w,r))` som bruker LaTeX for å tegne en brøk på y-aksen. Legg også merke til at vi har forskjellige skala på aksene.

```{r}


axes_i <- ggplot()+
  labs(x="X", y=expression(frac(w,r)))+
  theme(axis.title = element_text(size = 15),
        plot.title = element_text(size = 15),
        panel.background = element_blank(), # hvit bakgrunn
        axis.line = element_line(colour = "black"), # sett inn akselinjer
        axis.title.x = element_text(hjust = 1),
        axis.title.y = element_text(angle = 0, vjust = 1, hjust=1))+ # juster labels på aksene  
  
  scale_x_continuous(limits = c(0, 12), expand = c(0, 0))+
  scale_y_continuous(limits = c(0, 1), expand = c(0, 0)) # begrense aksene
# og sikre at akselinjene møttes i (0,0).

axes_i
  
```
